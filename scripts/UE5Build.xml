<?xml version='1.0' ?>
<BuildGraph xmlns="http://www.epicgames.com/BuildGraph" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.epicgames.com/BuildGraph ./Schema.xsd" >

    <!-- Environment options -->
    <Option Name="EnginePath" Restrict=".*" DefaultValue="" Description="Path to the engine" />
    <Option Name="TempPath" Restrict=".*" DefaultValue="" Description="Path to the temp folder" />
    <!--<Option Name="ProjectPath" Restrict=".*" DefaultValue="" Description="Path to the .uproject" />
    <Option Name="ProjectRoot" Restrict=".*" DefaultValue="" Description="Path to project directory" />-->
    <Option Name="ProjectsFolder" Restrict=".*" DefaultValue="%userprofile%\Documents\UnrealProjects" Description="Path to folder containing projects" />
    
    <!-- Project options-->
    <Option Name="Projects" Restrict="[^ ]+" DefaultValue="BuildGraphTest" Description="Project to Build, Cook, Stage, And Package" />

    <!-- Build options -->
    <Option Name="ExecuteBuild" Restrict="true|false" DefaultValue="true" Description="Execute the build steps" />

    <Option Name="EditorTarget" Restrict="[^ ]+" DefaultValue="UnrealEditor" Description="Name of Editor target to build, separated by + per project" />

    <Option Name="GameTargets" Restrict="[^ ]*" DefaultValue="$(Projects)" Description="List of Game targets to build, e.g. UnrealGame or {ProjectName}, separated by semicolons" />
    <Option Name="ClientTargets" Restrict="[^ ]*" DefaultValue="" Description="List of Client targets to build, e.g. UnrealClient or {ProjectNameClient}, separated by semicolons" />
    <Option Name="ServerTargets" Restrict="[^ ]*" DefaultValue="" Description="List of Server targets to build, e.g. UnrealServer or {ProjectNameServer}, separated by semicolons" />

    <Option Name="GameTargetPlatforms" Restrict="[^ ]*" DefaultValue="Win64" Description="Target platforms for the game build, separated by semicolons, e.g. Win64;Linux;PS5" />
    <Option Name="ClientTargetPlatforms" Restrict="[^ ]*" DefaultValue="Win64" Description="Target platforms for the client build, separated by semicolons, e.g. Win64;Linux;PS5" />
    <Option Name="ServerTargetPlatforms" Restrict="[^ ]*" DefaultValue="Win64" Description="Target platforms for the server build, separated by semicolons, e.g. Win64;Linux;MacOS" />

    <Option Name="GameConfigurations" Restrict="[^ ]*" DefaultValue="Development" Description="Configurations for the game build, separated by semicolons, e.g. Development;Shipping" />
    <Option Name="ClientConfigurations" Restrict="[^ ]*" DefaultValue="Development" Description="Configurations for the client build, separated by semicolons, e.g. Development;Shipping" />
    <Option Name="ServerConfigurations" Restrict="[^ ]*" DefaultValue="Development" Description="Configurations for the server build, separated by semicolons, e.g. Development;Shipping" />

    <Option Name="MacPlatforms" Restrict="[^ ]*" DefaultValue="Mac;IOS" Description="List of Platforms to be built on Mac agents, separated by semicolons, e.g. Mac;IOS" />

    <Option Name="StrictIncludes" Restrict="true|false" DefaultValue="false" Description="Include What You Use" />

    <!-- Metadata -->
    <Option Name="BuildVersion" Restrict="[^ ]*" DefaultValue="" Description="Version string to use for the build" />

    <!-- Stage options -->
    <Option Name="StageDirectory" Restrict=".+" DefaultValue="$(ProjectsFolder)\StagedBuilds" Description="Path to the staging directory" />

    <!-- Archive options-->
    <Option Name="ExecuteArchive" Restrict="true|false" DefaultValue="false" Description="Execute the archive steps" />
    <Option Name="ArchivePath" Restrict=".+" DefaultValue="$(ProjectsFolder)\ArchivedBuilds" Description="Path to the archive directory" />

    <!-- Test options -->
    <Option Name="ExecuteTests" Restrict="true|false" DefaultValue="false" Description="Execute the test steps" />
    <Option Name="TestsToRun" Restrict="[^ ]*" DefaultValue="" Description="Tests to run, separated by semicolons, e.g. SmokeTests;PerfTests" />

    <!-- Deployment options -->
    <Option Name="ExecuteDeploy" Restrict="true|false" DefaultValue="false" Description="Execute the deploy steps" />
    <Option Name="DeployTo" Restrict="[^ ]*" DefaultValue="" Description="Platforms to deploy to, separated by semicolons, e.g. Steam;GoogleDrive" />

    <Property Name="GameBinaries" Value="" />
    <Property Name="ClientBinaries" Value="" />
    <Property Name="ServerBinaries" Value="" />

    <Property Name="GameCookedContent" Value="" />
    <Property Name="ClientCookedContent" Value="" />
    <Property Name="ServerCookedContent" Value="" />

    <Property Name="GameStagedContent" Value="" />
    <Property Name="ClientStagedContent" Value="" />
    <Property Name="ServerStagedContent" Value="" />

    <Property Name="Tests" Value="" />

    <Property Name="Deployments" Value="" />

    <Property Name="AdditionalArguments" Value="" If="'$(StrictIncludes)' == 'false'" />
    <Property Name="AdditionalArguments" Value=" -iwyu -NoPCH -NoSharedPCH -DisableUnity" If="'$(StrictIncludes)' == 'true'" />

    <!-- Targets that will be executed on a Windows machine-->
    <Agent Name="Windows Build" Type="Win64" If="'$(ExecuteBuild)' == 'true'">

        <!-- Compile the editor for Windows (required for later cook)-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <Node Name="Compile $(EditorTarget) Win64 for $(Project)" Produces="#EditorBinaries_$(Project)">
                <Compile Target="$(EditorTarget)" Platform="Win64" Configuration="Development" Tag="#EditorBinaries_$(Project)" Arguments="-Project=&quot;$(ProjectPath)&quot; $(AdditionalArguments)" AllowParallelExecutor="false" />
            </Node>
        </ForEach>

        <!-- Compile the Game-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <ForEach Name="TargetName" Values="$(GameTargets)">
                <ForEach Name="TargetPlatform" Values="$(GameTargetPlatforms)">
                    <ForEach Name="TargetConfiguration" Values="$(GameConfigurations)">
                        <Node Name="Compile $(Project) $(TargetName) $(TargetPlatform) $(TargetConfiguration)" Produces="#GameBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="!ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')">
                            <Compile Target="$(TargetName)" Platform="$(TargetPlatform)" Configuration="$(TargetConfiguration)" Tag="#GameBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" Arguments="-Project=&quot;$(ProjectPath)&quot; $(AdditionalArguments)" />
                            <Tag Files="#GameBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" Filter="*.target" With="#GameReceipts_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                            <SanitizeReceipt Files="#GameReceipts_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                        </Node>
                        <Property Name="GameBinaries" Value="$(GameBinaries)#GameBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);" />
                    </ForEach>
                </ForEach>
            </ForEach>
        </ForEach>

        <!-- Compile the Client-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <ForEach Name="TargetName" Values="$(ClientTargets)">
                <ForEach Name="TargetPlatform" Values="$(ClientTargetPlatforms)">
                    <ForEach Name="TargetConfiguration" Values="$(ClientConfigurations)">
                        <Node Name="Compile $(Project) $(TargetName) $(TargetPlatform) $(TargetConfiguration)" Produces="#ClientBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="!ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')">
                            <Compile Target="$(TargetName)" Platform="$(TargetPlatform)" Configuration="$(TargetConfiguration)" Tag="#ClientBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" Arguments="-Project=&quot;$(ProjectPath)&quot; $(AdditionalArguments)" />
                            <Tag Files="#ClientBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" Filter="*.target" With="#ClientReceipts_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                            <SanitizeReceipt Files="#ClientReceipts_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                        </Node>
                        <Property Name="ClientBinaries" Value="$(ClientBinaries)#ClientBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);" />
                    </ForEach>
                </ForEach>
            </ForEach>
        </ForEach>

        <!-- Compile the Dedicated Server-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <ForEach Name="TargetName" Values="$(ServerTargets)">
                <ForEach Name="TargetPlatform" Values="$(ServerTargetPlatforms)">
                    <ForEach Name="TargetConfiguration" Values="$(ServerConfigurations)">
                        <Node Name="Compile $(Project) $(TargetName) $(TargetPlatform) $(TargetConfiguration)" Produces="#ServerBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="!ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')">
                            <Compile Target="$(TargetName)" Platform="$(TargetPlatform)" Configuration="$(TargetConfiguration)" Tag="#ServerBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" Arguments="-Project=&quot;$(ProjectPath)&quot; $(AdditionalArguments)" />
                            <Tag Files="#ServerBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" Filter="*.target" With="#ServerReceipts_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                            <SanitizeReceipt Files="#ServerReceipts_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                        </Node>
                        <Property Name="ServerBinaries" Value="$(ServerBinaries)#ServerBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);" />
                    </ForEach>
                </ForEach>
            </ForEach>
        </ForEach>

    </Agent>

    <!-- Targets that will be executed on a Mac machine-->
    <Agent Name="MacOS Build" Type="Mac" If="'$(ExecuteBuild)' == 'true'">

        <!-- Compile the Game-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <ForEach Name="TargetName" Values="$(GameTargets)">
                <ForEach Name="TargetPlatform" Values="$(GameTargetPlatforms)">
                    <ForEach Name="TargetConfiguration" Values="$(GameConfigurations)">
                        <Node Name="Compile $(Project) $(TargetName) $(TargetPlatform) $(TargetConfiguration)" Produces="#GameBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')">
                            <Compile Target="$(TargetName)" Platform="$(TargetPlatform)" Configuration="$(TargetConfiguration)" Tag="#GameBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" Arguments="-Project=&quot;$(ProjectPath)&quot; $(AdditionalArguments)" />
                            <Tag Files="#GameBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" Filter="*.target" With="#GameReceipts_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                            <SanitizeReceipt Files="#GameReceipts_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                        </Node>
                        <Property Name="GameBinaries" Value="$(GameBinaries)#GameBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);" />
                    </ForEach>
                </ForEach>
            </ForEach>
        </ForEach>

        <!-- Compile the Client-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <ForEach Name="TargetName" Values="$(ClientTargets)">
                <ForEach Name="TargetPlatform" Values="$(ClientTargetPlatforms)">
                    <ForEach Name="TargetConfiguration" Values="$(ClientConfigurations)">
                        <Node Name="Compile $(Project) $(TargetName) $(TargetPlatform) $(TargetConfiguration)" Produces="#ClientBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')">
                            <Compile Target="$(TargetName)" Platform="$(TargetPlatform)" Configuration="$(TargetConfiguration)" Tag="#ClientBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" Arguments="-Project=&quot;$(ProjectPath)&quot; $(AdditionalArguments)" />
                            <Tag Files="#ClientBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" Filter="*.target" With="#ClientReceipts_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                            <SanitizeReceipt Files="#ClientReceipts_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                        </Node>
                        <Property Name="ClientBinaries" Value="$(ClientBinaries)#ClientBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);" />
                    </ForEach>
                </ForEach>
            </ForEach>
        </ForEach>

        <!-- Compile the Dedicated Server-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <ForEach Name="TargetName" Values="$(ServerTargets)">
                <ForEach Name="TargetPlatform" Values="$(ServerTargetPlatforms)">
                    <ForEach Name="TargetConfiguration" Values="$(ServerConfigurations)">
                        <Node Name="Compile $(Project) $(TargetName) $(TargetPlatform) $(TargetConfiguration)" Produces="#ServerBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')">
                            <Compile Target="$(TargetName)" Platform="$(TargetPlatform)" Configuration="$(TargetConfiguration)" Tag="#ServerBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" Arguments="-Project=&quot;$(ProjectPath)&quot; $(AdditionalArguments)" />
                            <Tag Files="#ServerBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" Filter="*.target" With="#ServerReceipts_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                            <SanitizeReceipt Files="#ServerReceipts_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                        </Node>
                        <Property Name="ServerBinaries" Value="$(ServerBinaries)#ServerBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);" />
                    </ForEach>
                </ForEach>
            </ForEach>
        </ForEach>

        <!-- No cooking on MacOS-->

    </Agent>

    <!-- Targets that will be executed on a Linux machine-->
    <Agent Name="Linux" Type="Linux" If="'$(ExecuteBuild)' == 'true'">
        
        <!-- Nothing here yet...-->

    </Agent>

    <!-- Targets that will be executed on a Windows machine-->
    <Agent Name="Windows Cook" Type="Win64" If="'$(ExecuteBuild)' == 'true'">

        <!-- Cook for Game platforms-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <ForEach Name="TargetPlatform" Values="$(GameTargetPlatforms)">
                <Node Name="Cook Game $(Project) $(TargetPlatform)" Requires="#EditorBinaries_$(Project)" Produces="#GameCookedContent_$(Project)_$(TargetPlatform)">
                    <Property Name="CookPlatform" Value="$(TargetPlatform)" />
                    <Property Name="CookPlatform" Value="Windows" If="'$(CookPlatform)' == 'Win64'" />
                    <Cook Project="$(ProjectPath)" Platform="$(CookPlatform)" Tag="#GameCookedContent_$(Project)_$(TargetPlatform)" />
                </Node>
                <Property Name="GameCookedContent" Value="$(GameCookedContent)#GameCookedContent_$(Project)_$(TargetPlatform);" />
            </ForEach>
        </ForEach>

        <!-- Cook for Client platforms-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <ForEach Name="TargetName" Values="$(ClientTargets)">
                <ForEach Name="TargetPlatform" Values="$(ClientTargetPlatforms)">
                    <Node Name="Cook Client $(Project) $(TargetPlatform)" Requires="#EditorBinaries_$(Project)" Produces="#ClientCookedContent_$(Project)_$(TargetPlatform)">
                        <Property Name="CookPlatform" Value="$(TargetPlatform)" />
                        <Property Name="CookPlatform" Value="Windows" If="'$(CookPlatform)' == 'Win64'" />
                        <Property Name="CookPlatform" Value="$(CookPlatform)Client" If="('$(CookPlatform)' == 'Windows') or ('$(CookPlatform)' == 'Mac') or ('$(CookPlatform)' == 'Linux')" />
                        <Cook Project="$(ProjectPath)" Platform="$(CookPlatform)" Tag="#ClientCookedContent_$(Project)_$(TargetPlatform)" />
                    </Node>
                    <Property Name="ClientCookedContent" Value="$(ClientCookedContent)#ClientCookedContent_$(Project)_$(TargetPlatform);" />
                </ForEach>
            </ForEach>
        </ForEach>

        <!-- Cook for Dedicated Servers-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <ForEach Name="TargetName" Values="$(ServerTargets)">
                <ForEach Name="TargetPlatform" Values="$(ServerTargetPlatforms)">
                    <Node Name="Cook Server $(Project) $(TargetPlatform)" Requires="#EditorBinaries_$(Project)" Produces="#ServerCookedContent_$(Project)_$(TargetPlatform)">
                        <Property Name="CookPlatform" Value="$(TargetPlatform)" />
                        <Property Name="CookPlatform" Value="Windows" If="'$(CookPlatform)' == 'Win64'" />
                        <Property Name="CookPlatform" Value="$(CookPlatform)Server" If="('$(CookPlatform)' == 'Windows') or ('$(CookPlatform)' == 'Mac') or ('$(CookPlatform)' == 'Linux')" />
                        <Cook Project="$(ProjectPath)" Platform="$(CookPlatform)" Tag="#ServerCookedContent_$(Project)_$(TargetPlatform)" />
                    </Node>
                    <Property Name="ServerCookedContent" Value="$(ServerCookedContent)#ServerCookedContent_$(Project)_$(TargetPlatform);" />
                </ForEach>
            </ForEach>
        </ForEach>

    </Agent>

    <!-- Targets that will be executed on a Windows machine-->
    <Agent Name="Windows Stage and Package" Type="Win64" If="'$(ExecuteBuild)' == 'true'">

        <!-- Stage and Package the Game-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <Property Name="ProjectRoot" Value="$(ProjectsFolder)\$(Project)" />
            <ForEach Name="TargetName" Values="$(GameTargets)">
                <ForEach Name="TargetPlatform" Values="$(GameTargetPlatforms)">
                    <ForEach Name="TargetConfiguration" Values="$(GameConfigurations)">
                        <Node Name="Stage and Package $(Project) $(TargetName) $(TargetPlatform) $(TargetConfiguration)" Requires="#GameBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);#GameCookedContent_$(Project)_$(TargetPlatform)" Produces="#GameStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="!ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')">
                            <Property Name="StagePlatform" Value="$(TargetPlatform)" />
                            <Property Name="StagePlatform" Value="Windows" If="'$(StagePlatform)' == 'Win64'" />
                            <Property Name="DisableCodeSigning" Value="" />
                            <Property Name="DisableCodeSigning" Value="-NoCodeSign" If="('$(TargetPlatform)' == 'Win64') or ('$(TargetPlatform)' == 'Mac') or ('$(TargetPlatform)' == 'Linux')" />
                            <Property Name="ArchivalFlag" Value="" />
                            <Property Name="ArchivalFlag" Value="-Archive -Archivedirectory=&quot;$(ArchivePath)\$(Project)&quot;" If="'$(ExecuteArchive)' == 'true'" />
                            <Property Name="PackageFlag" Value="" />
                            <Property Name="PackageFlag" Value="-package" If="('$(TargetPlatform)' == 'IOS') or ('$(TargetPlatform)' == 'Android')" />
                            <Spawn Exe="cmd" Arguments="/C set &quot;uebp_UATMutexNoWait=1&quot; &amp; set &amp; $(EnginePath)\Build\BatchFiles\RunUAT.bat BuildCookRun -project=&quot;$(ProjectPath)&quot; -noP4 $(DisableCodeSigning) -platform=$(TargetPlatform) -clientconfig=$(TargetConfiguration) -SkipCook -cook -pak $(PackageFlag) -stage -stagingdirectory=&quot;$(StageDirectory)&quot; $(ArchivalFlag) -unattended -stdlog" />
                            <Tag BaseDir="$(StageDirectory)\$(StagePlatform)" Files="..." With="#GameStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                            <Tag BaseDir="$(ProjectRoot)\Binaries\$(TargetPlatform)" Files="..." With="#GameStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="('$(TargetPlatform)' == 'IOS') or ('$(TargetPlatform)' == 'Android')" />
                        </Node>
                        <Property Name="GameStagedContent" Value="$(GameStagedContent)#GameStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);" If="!ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')" />
                    </ForEach>
                </ForEach>
            </ForEach>
        </ForEach>

        <!-- Stage and Package the Client-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <Property Name="ProjectRoot" Value="$(ProjectsFolder)\$(Project)" />
            <ForEach Name="TargetName" Values="$(ClientTargets)">
                <ForEach Name="TargetPlatform" Values="$(ClientTargetPlatforms)">
                    <ForEach Name="TargetConfiguration" Values="$(ClientConfigurations)">
                        <Node Name="Stage and Package $(Project) $(TargetName) $(TargetPlatform) $(TargetConfiguration)" Requires="#ClientBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);#ClientCookedContent_$(Project)_$(TargetPlatform)" Produces="#ClientStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="!ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')">
                            <Property Name="StagePlatform" Value="$(TargetPlatform)" />
                            <Property Name="StagePlatform" Value="Windows" If="'$(StagePlatform)' == 'Win64'" />
                            <Property Name="DisableCodeSigning" Value="" />
                            <Property Name="DisableCodeSigning" Value="-NoCodeSign" If="('$(TargetPlatform)' == 'Win64') or ('$(TargetPlatform)' == 'Mac') or ('$(TargetPlatform)' == 'Linux')" />
                            <Property Name="PackageFlag" Value="" />
                            <Property Name="PackageFlag" Value="-package" If="('$(TargetPlatform)' == 'IOS') or ('$(TargetPlatform)' == 'Android')" />
                            <Spawn Exe="cmd" Arguments="/C set uebp_UATMutexNoWait=1 &amp; $(EnginePath)\Build\BatchFiles\RunUAT.bat BuildCookRun -project=&quot;$(ProjectPath)&quot; -noP4 $(DisableCodeSigning) -platform=$(TargetPlatform) -clientconfig=$(TargetConfiguration) -SkipCook -cook -pak $(PackageFlag) -stage -stagingdirectory=&quot;$(StageDirectory)&quot;" />
                            <Tag BaseDir="$(StageDirectory)\$(StagePlatform)" Files="..." With="#ClientStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                            <Tag BaseDir="$(ProjectRoot)\Binaries\$(TargetPlatform)" Files="..." With="#ClientStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="('$(TargetPlatform)' == 'IOS') or ('$(TargetPlatform)' == 'Android')" />
                        </Node>
                        <Property Name="ClientStagedContent" Value="$(ClientStagedContent)#ClientStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);" If="!ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')" />
                    </ForEach>
                </ForEach>
            </ForEach>
        </ForEach>


        <!-- Stage and Package the Dedicated Server-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <Property Name="ProjectRoot" Value="$(ProjectsFolder)\$(Project)" />
            <ForEach Name="TargetName" Values="$(ServerTargets)">
                <ForEach Name="TargetPlatform" Values="$(ServerTargetPlatforms)">
                    <ForEach Name="TargetConfiguration" Values="$(ServerConfigurations)">
                        <Node Name="Stage and Package $(Project) $(TargetName) $(TargetPlatform) $(TargetConfiguration)" Requires="#ServerBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);#ServerCookedContent_$(Project)_$(TargetPlatform)" Produces="#ServerStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="!ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')">
                            <Property Name="StagePlatform" Value="$(TargetPlatform)" />
                            <Property Name="StagePlatform" Value="Windows" If="'$(StagePlatform)' == 'Win64'" />
                            <Property Name="DisableCodeSigning" Value="" />
                            <Property Name="DisableCodeSigning" Value="-NoCodeSign" If="('$(TargetPlatform)' == 'Win64') or ('$(TargetPlatform)' == 'Mac') or ('$(TargetPlatform)' == 'Linux')" />
                            <Property Name="PackageFlag" Value="" />
                            <Property Name="PackageFlag" Value="-package" If="('$(TargetPlatform)' == 'IOS') or ('$(TargetPlatform)' == 'Android')" />
                            <Spawn Exe="cmd" Arguments="/C set uebp_UvTMutexNoWait=1 &amp; $(EnginePath)\Build\BatchFiles\RunUAT.bat BuildCookRun -project=&quot;$(ProjectPath)&quot; -noP4 $(DisableCodeSigning) -dedicatedserver -noclient -serverplatform=$(TargetPlatform) -server -serverconfig=$(TargetConfiguration) -SkipCook -cook -pak $(PackageFlag) -stage -stagingdirectory=&quot;$(StageDirectory)&quot;" />
                            <Tag BaseDir="$(StageDirectory)\$(StagePlatform)" Files="..." With="#ServerStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                            <Tag BaseDir="$(ProjectRoot)\Binaries\$(TargetPlatform)" Files="..." With="#ServerStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="('$(TargetPlatform)' == 'IOS') or ('$(TargetPlatform)' == 'Android')" />
                        </Node>
                        <Property Name="ServerStagedContent" Value="$(ServerStagedContent)#ServerStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);" If="!ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')" />
                    </ForEach>
                </ForEach>
            </ForEach>
        </ForEach>

    </Agent>

    <!-- Targets that will be executed on a Mac machine-->
    <Agent Name="MacOS Stage and Package" Type="Mac" If="'$(ExecuteBuild)' == 'true'">

        <!-- Stage and Package the Game-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <Property Name="ProjectRoot" Value="$(ProjectsFolder)\$(Project)" />
            <ForEach Name="TargetName" Values="$(GameTargets)">
                <ForEach Name="TargetPlatform" Values="$(GameTargetPlatforms)">
                    <ForEach Name="TargetConfiguration" Values="$(GameConfigurations)">
                        <Node Name="Stage and Package $(Project) $(TargetName) $(TargetPlatform) $(TargetConfiguration)" Requires="#GameBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);#GameCookedContent_$(Project)_$(TargetPlatform)" Produces="#GameStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')">
                            <Property Name="StagePlatform" Value="$(TargetPlatform)" />
                            <Property Name="StagePlatform" Value="Windows" If="'$(StagePlatform)' == 'Win64'" />
                            <Property Name="DisableCodeSigning" Value="" />
                            <Property Name="DisableCodeSigning" Value="-NoCodeSign" If="('$(TargetPlatform)' == 'Win64') or ('$(TargetPlatform)' == 'Mac') or ('$(TargetPlatform)' == 'Linux')" />
                            <Property Name="PackageFlag" Value="" />
                            <Property Name="PackageFlag" Value="-package" If="('$(TargetPlatform)' == 'IOS') or ('$(TargetPlatform)' == 'Android')" />
                            <Spawn Exe="cmd" Arguments="/C $(EnginePath)\Build\BatchFiles\RunUAT.bat BuildCookRun -project=&quot;$(ProjectPath)&quot; -noP4 $(DisableCodeSigning) -platform=$(TargetPlatform) -clientconfig=$(TargetConfiguration) -SkipCook -cook -pak $(PackageFlag) -stage -stagingdirectory=&quot;$(StageDirectory)&quot;" />
                            <Tag BaseDir="$(StageDirectory)\$(StagePlatform)" Files="..." With="#GameStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                            <Tag BaseDir="$(ProjectRoot)\Binaries\$(TargetPlatform)" Files="..." With="#GameStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="('$(TargetPlatform)' == 'IOS') or ('$(TargetPlatform)' == 'Android')" />
                        </Node>
                        <Property Name="GameStagedContent" Value="$(GameStagedContent)#GameStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);" If="ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')" />
                    </ForEach>
                </ForEach>
            </ForEach>
        </ForEach>

        <!-- Stage and Package the Client-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <Property Name="ProjectRoot" Value="$(ProjectsFolder)\$(Project)" />
            <ForEach Name="TargetName" Values="$(ClientTargets)">
                <ForEach Name="TargetPlatform" Values="$(ClientTargetPlatforms)">
                    <ForEach Name="TargetConfiguration" Values="$(ClientConfigurations)">
                        <Node Name="Stage and Package $(Project) $(TargetName) $(TargetPlatform) $(TargetConfiguration)" Requires="#ClientBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);#ClientCookedContent_$(Project)_$(TargetPlatform)" Produces="#ClientStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')">
                            <Property Name="StagePlatform" Value="$(TargetPlatform)" />
                            <Property Name="StagePlatform" Value="Windows" If="'$(StagePlatform)' == 'Win64'" />
                            <Property Name="DisableCodeSigning" Value="" />
                            <Property Name="DisableCodeSigning" Value="-NoCodeSign" If="('$(TargetPlatform)' == 'Win64') or ('$(TargetPlatform)' == 'Mac') or ('$(TargetPlatform)' == 'Linux')" />
                            <Property Name="PackageFlag" Value="" />
                            <Property Name="PackageFlag" Value="-package" If="('$(TargetPlatform)' == 'IOS') or ('$(TargetPlatform)' == 'Android')" />
                            <Spawn Exe="cmd" Arguments="/C $(EnginePath)\Build\BatchFiles\RunUAT.bat BuildCookRun -project=&quot;$(ProjectPath)&quot; -noP4 $(DisableCodeSigning) -platform=$(TargetPlatform) -clientconfig=$(TargetConfiguration) -SkipCook -cook -pak $(PackageFlag) -stage -stagingdirectory=&quot;$(StageDirectory)&quot;" />
                            <Tag BaseDir="$(StageDirectory)\$(StagePlatform)" Files="..." With="#ClientStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                            <Tag BaseDir="$(ProjectRoot)\Binaries\$(TargetPlatform)" Files="..." With="#ClientStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="('$(TargetPlatform)' == 'IOS') or ('$(TargetPlatform)' == 'Android')" />
                        </Node>
                        <Property Name="ClientStagedContent" Value="$(ClientStagedContent)#ClientStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);" If="ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')" />
                    </ForEach>
                </ForEach>
            </ForEach>
        </ForEach>

        <!-- Stage and Package the Dedicated Server-->
        <ForEach Name="Project" Values="$(Projects)">
            <Property Name="ProjectPath" Value="$(ProjectsFolder)\$(Project)\$(Project).uproject" />
            <Property Name="ProjectRoot" Value="$(ProjectsFolder)\$(Project)" />
            <ForEach Name="TargetName" Values="$(ServerTargets)">
                <ForEach Name="TargetPlatform" Values="$(ServerTargetPlatforms)">
                    <ForEach Name="TargetConfiguration" Values="$(ServerConfigurations)">
                        <Node Name="Stage and Package $(Project) $(TargetName) $(TargetPlatform) $(TargetConfiguration)" Requires="#ServerBinaries_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);#ServerCookedContent_$(Project)_$(TargetPlatform)" Produces="#ServerStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')">
                            <Property Name="StagePlatform" Value="$(TargetPlatform)" />
                            <Property Name="StagePlatform" Value="Windows" If="'$(StagePlatform)' == 'Win64'" />
                            <Property Name="DisableCodeSigning" Value="" />
                            <Property Name="DisableCodeSigning" Value="-NoCodeSign" If="('$(TargetPlatform)' == 'Win64') or ('$(TargetPlatform)' == 'Mac') or ('$(TargetPlatform)' == 'Linux')" />
                            <Property Name="PackageFlag" Value="" />
                            <Property Name="PackageFlag" Value="-package" If="('$(TargetPlatform)' == 'IOS') or ('$(TargetPlatform)' == 'Android')" />
                            <Spawn Exe="cmd" Arguments="/C $(EnginePath)\Build\BatchFiles\RunUAT.bat BuildCookRun -project=&quot;$(ProjectPath)&quot; -noP4 $(DisableCodeSigning) -dedicatedserver -noclient -serverplatform=$(TargetPlatform) -server -serverconfig=$(TargetConfiguration) -SkipCook -cook -pak $(PackageFlag) -stage -stagingdirectory=&quot;$(StageDirectory)&quot;" />
                            <Tag BaseDir="$(StageDirectory)\$(StagePlatform)" Files="..." With="#ServerStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" />
                            <Tag BaseDir="$(ProjectRoot)\Binaries\$(TargetPlatform)" Files="..." With="#ServerStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration)" If="('$(TargetPlatform)' == 'IOS') or ('$(TargetPlatform)' == 'Android')" />
                        </Node>
                        <Property Name="ServerStagedContent" Value="$(ServerStagedContent)#ServerStagedContent_$(Project)_$(TargetName)_$(TargetPlatform)_$(TargetConfiguration);" If="ContainsItem('$(MacPlatforms)', '$(TargetPlatform)', ';')" />
                    </ForEach>
                </ForEach>
            </ForEach>
        </ForEach>

    </Agent>
   
    <!--<Agent Name="Windows Tests" Type="Win64" If="'$(ExecuteTests)' == 'true'">

        <!- Run the Editor Tests ->
        <ForEach Name="Tests" Values="$(TestsToRun)" Separator="+">
            <Property Name="TestName" Value="" />
            <Property Name="TestRequirements" Value="" />
            <ForEach Name="Test" Values="$(Tests)" Separator="~">
                <Switch>
                    <Case If="'$(TestName)' == ''">
                        <Property Name="TestName" Value="$(Test)" />
                    </Case>
                    <Default>
                        <Property Name="TestRequirements" Value="$(Test)" />
                    </Default>
                </Switch>
            </ForEach>
            <Node Name="Test $(TestName)" Requires="$(TestRequirements)" If="'$(ExecuteBuild)' == 'true'">
                <!-CMD CALL TEST ->
    </Agent>-->

    <!-- Targets that will be executed on a Windows machine -->
    <Agent Name="Windows Tag" Type="Win64">

        <!-- All Encompassing node-->
        <Node Name="Complete" Requires="$(GameStagedContent);$(ClientStagedContent);$(ServerStagedContent)">
        </Node>
    
    </Agent>

</BuildGraph>